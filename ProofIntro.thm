This file was automatically generated by Deduce.
This file summarizes the theorems proved in the file:
	ProofIntro.pf

length_nat_empty: length(@empty<Nat>) = 0

length_node42: length(node(42, empty)) = 1

append_12: node(1, empty) ++ node(2, empty) = node(1, node(2, empty))

length_one_nat: (all x:Nat. length(node(x, empty)) = 1)

length_node42_again: length(node(42, empty)) = 1

length_one: (all U:type. (all x:U. length(node(x, empty)) = 1))

length_one_equal: (all U:type. (all x:U, y:U. length(node(x, empty)) = length(node(y, empty))))

less_max: (all x:Nat, y:Nat. x ≤ max'(x, y))

append_empty: (all U:type. (all xs:List<U>. xs ++ empty = xs))

xyz_zyx: (all x:Nat, y:Nat, z:Nat. x + (y + z) = z + (y + x))

xyz_zyx_eqn: (all x:Nat, y:Nat, z:Nat. x + (y + z) = z + (y + x))

positive_1_and_2: (0 ≤ 1 and 0 ≤ 2)

positive_2: 0 ≤ 2

dichotomy: (all x:Nat, y:Nat. (x ≤ y or y < x))

length_zero_empty: (all T:type. (all xs:List<T>. (if length(xs) = 0 then xs = empty)))

length_append_zero_empty: (all T:type. (all xs:List<T>, ys:List<T>. (if length(xs ++ ys) = 0 then (xs = empty and ys = empty))))

really_trivial: true

contra_false: (all a:bool, b:bool. not ((a = b and a = true and b = false)))

false_any: (all x:bool, y:bool. (if false then x = y))

less_irreflexive: (all x:Nat. not (x < x))

less_not_equal: (all x:Nat, y:Nat. (if x < y then not (x = y)))

zero_or_positive: (all x:Nat. (x = 0 or 0 < x))

addition_of_evens: (all x:Nat, y:Nat. (if (Even(x) and Even(y)) then Even(x + y)))

