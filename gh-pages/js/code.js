const codeBlocks = [
	"reference_all_example_elim",
	"reference_less_equal_example",
	"reference_membership_example",
	"proof_list_length_zero_empty",
	"reference_list_example",
	"reference_call_example",
	"programming_NL12",
	"proof_intro_dichotomy",
	"reference_mod_example",
	"reference_definition_example",
	"reference_compose_example",
	"proof_intro_less_not_equal",
	"programming_five_six",
	"reference_equations_example",
	"proof_pos_2",
	"programming_test_last",
	"reference_rewrite_in_example",
	"programming_broken_front",
	"reference_generic_example",
	"reference_rewrite_example",
	"proof_intro_zero_or_positive",
	"reference_conjunct_example",
	"reference_and_example",
	"proof_intro_less_irreflexive",
	"reference_suffices_example",
	"proof_contra_false",
	"reference_obtain_example",
	"reference_true_example",
	"reference_switch_proof_example",
	"proof_list_length_one",
	"reference_multiply_example",
	"reference_conclude_example",
	"reference_instantiate_example",
	"proof_false_any",
	"programming_ImportNat",
	"programming_front",
	"reference_subset_example",
	"reference_assert_example",
	"reference_and_example_intro",
	"reference_definition_in_example",
	"programming_apply_length",
	"proof_length_node42",
	"programming_area",
	"proof_really_trivial",
	"reference_subtract_example",
	"programming_apply_length_empty",
	"reference_set_union_example",
	"reference_extensionality_example",
	"programming_NatList",
	"proof_list_append_empty",
	"proof_less_alt_max",
	"reference_add_multiset_example",
	"proof_length_nat_one",
	"reference_function_term_example",
	"reference_if_then_else_example",
	"programming_Pair",
	"home_example1",
	"reference_function_example",
	"proof_list_length_one_equal",
	"reference_trichotomy_example",
	"proof_intro_addition_of_evens",
	"programming_head",
	"reference_apply_to_example",
	"reference_greater_equal_example",
	"proof_alt_max",
	"reference_all_example_intro",
	"proof_length_append_zero_empty",
	"home_example2",
	"proof_xyz_zyx",
	"reference_division_example",
	"reference_define_term_example",
	"programming_Nat",
	"proof_append_node_1_node_2",
	"programming_print7",
	"proof_append_node_x_node_y",
	"programming_lenNatList",
	"programming_assert_if_true",
	"reference_less_than_example",
	"reference_or_example_intro1",
	"reference_switch_example",
	"programming_test_sum",
	"reference_and_example_elim",
	"programming_length",
	"reference_define_example",
	"reference_print_area",
	"reference_instantiate_proof_example",
	"home_example3",
	"reference_choose_example",
	"proof_length_append",
	"programming_List",
	"reference_define_proof_example",
	"proof_pos_1_and_2",
	"reference_or_example_intro2",
	"programming_all_elements",
	"programming_print_five",
	"programming_test_remove_if",
	"programming_bad_area",
	"programming_test_dot",
	"programming_print_front",
	"proof_length_nat_empty",
	"programming_L12",
	"reference_union_example",
	"reference_add_example",
	"programming_print_area",
	"reference_assume_example",
	"reference_mark_example",
	"reference_arbitrary_example",
	"reference_intersect_example",
	"proof_xyz_zyx_eqn",
	"reference_append_example",
	"programming_zip_example",
	"reference_print_example",
	"programming_app",
	"reference_all_example_bool",
	"reference_greater_example",
	"reference_induction_example",
	"proof_equal_less_trans",
	"reference_or_example",
	"proof_length_node42_again",
	"proof_x_0_x_eq_2_x",
	"reference_injective_example",
]