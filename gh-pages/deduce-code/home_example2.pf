import Nat
import List
import Set
import MultiSet
import Maps

theorem less_implies_not_equal: all x:Nat, y:Nat.
  if x < y then not (x = y)
proof
  arbitrary x:Nat, y:Nat
  assume: x < y
  assume: x = y
  have: y < y by rewrite (recall x = y) in recall x < y
  have: not (y < y) by less_irreflexive
  conclude false by apply (recall not (y < y)) to recall y < y
end
